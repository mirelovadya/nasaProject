{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\\\u05D0\\u05EA\\u05E8\\u05D0\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8 \\u05E2\\u05E0\\u05E7\\\\client\\\\try-app\\\\src\\\\components\\\\Picture.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { Component, useState } from 'react';\nimport { connect } from 'react-redux';\n\nfunction Picture(props) {\n  _s();\n\n  const [selectedFile, setSelectedFile] = useState();\n  state = {\n    selectedFile: null\n  }; // On file select (from the pop up)\n\n  onFileChange = event => {\n    this.setState({\n      selectedFile: event.target.files[0]\n    });\n  }; // On file upload (click the upload button)\n\n\n  onFileUpload = () => {\n    // Create an object of formData\n    const formData = new FormData(); // Update the formData object\n\n    formData.append(\"myFile\", this.state.selectedFile, this.state.selectedFile.name); // Details of the uploaded file\n\n    console.log(this.state.selectedFile); // Request made to the backend api\n    // Send formData object\n\n    axios.post(\"\");\n  }; // File content to be displayed after\n  // file upload is complete\n\n\n  fileData = () => {\n    if (this.state.selectedFile) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"File Details:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"File Name: \", this.state.selectedFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"File Type: \", this.state.selectedFile.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Last Modified:\", this.state.selectedFile.lastModifiedDate.toDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Choose before Pressing the Upload button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"choose picture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: this.onFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onFileUpload,\n        children: \"Upload!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), this.fileData()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Picture, \"wgo08tH+6tJaMnEGYOhpLMFnaO4=\");\n\n_c = Picture;\nexport default connect(state => {\n  return {\n    name: state.name,\n    password: state.password,\n    email: state.email,\n    picture: state.picture\n  };\n}, null)(Picture);\n\nconst uploadPicture = () => {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Authorization\", \"\");\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var raw = JSON.stringify({\n    \"name\": \"mi\",\n    \"type\": \"img\",\n    \"webkitRelativePath\": \"/vgty/\",\n    \"lastModifiedDate\": \"21/03\"\n  });\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  fetch(\"localhost:4200/uploadPicture/sholamit/66666\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Picture\");","map":{"version":3,"sources":["D:/אתרא/פרויקט ענק/client/try-app/src/components/Picture.js"],"names":["axios","React","Component","useState","connect","Picture","props","selectedFile","setSelectedFile","state","onFileChange","event","setState","target","files","onFileUpload","formData","FormData","append","name","console","log","post","fileData","type","lastModifiedDate","toDateString","password","email","picture","uploadPicture","myHeaders","Headers","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","then","response","text","result","catch","error"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nimport React, { Component, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction Picture(props) {\r\n    const [selectedFile,setSelectedFile]=useState()\r\n    \r\n    state = {\r\n        selectedFile: null\r\n    };\r\n\r\n    // On file select (from the pop up)\r\n    onFileChange = event => {\r\n        this.setState({ selectedFile: event.target.files[0] });\r\n    };\r\n\r\n    // On file upload (click the upload button)\r\n    onFileUpload = () => {\r\n\r\n        // Create an object of formData\r\n        const formData = new FormData();\r\n\r\n        // Update the formData object\r\n        formData.append(\r\n            \"myFile\",\r\n            this.state.selectedFile,\r\n            this.state.selectedFile.name\r\n        );\r\n\r\n        // Details of the uploaded file\r\n        console.log(this.state.selectedFile);\r\n\r\n        // Request made to the backend api\r\n        // Send formData object\r\n        axios.post(\"\");\r\n    };\r\n\r\n    // File content to be displayed after\r\n    // file upload is complete\r\n    fileData = () => {\r\n\r\n        if (this.state.selectedFile) {\r\n\r\n            return (\r\n                <div>\r\n                    <h2>File Details:</h2>\r\n\r\n                    <p>File Name: {this.state.selectedFile.name}</p>\r\n\r\n\r\n                    <p>File Type: {this.state.selectedFile.type}</p>\r\n\r\n\r\n                    <p>\r\n                        Last Modified:\r\n                        {this.state.selectedFile.lastModifiedDate.toDateString()}\r\n                    </p>\r\n\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <br />\r\n                    <h4>Choose before Pressing the Upload button</h4>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n        return (\r\n            <div>\r\n                <h1>\r\n                    choose picture\r\n\t\t\t</h1>\r\n\r\n                <div>\r\n                    <input type=\"file\" onChange={this.onFileChange} />\r\n                    <button onClick={this.onFileUpload}>\r\n                        Upload!\r\n\t\t\t\t</button>\r\n                </div>\r\n                {this.fileData()}\r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n    (state) => {\r\n        return {\r\n            name: state.name,\r\n            password: state.password,\r\n            email: state.email,\r\n            picture: state.picture\r\n        }\r\n    },\r\n    null\r\n)(Picture);\r\n\r\n\r\nconst uploadPicture = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"\");\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var raw = JSON.stringify({ \"name\": \"mi\", \"type\": \"img\", \"webkitRelativePath\": \"/vgty/\", \"lastModifiedDate\": \"21/03\" });\r\n\r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    fetch(\"localhost:4200/uploadPicture/sholamit/66666\", requestOptions)\r\n        .then(response => response.text())\r\n        .then(result => console.log(result))\r\n        .catch(error => console.log('error', error));\r\n}"]},"metadata":{},"sourceType":"module"}