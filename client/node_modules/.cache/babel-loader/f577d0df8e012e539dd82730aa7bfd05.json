{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\\\u05D0\\u05EA\\u05E8\\u05D0\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8 \\u05E2\\u05E0\\u05E7\\\\client\\\\try-app\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { setName, setPassword, setEmail } from '../redux/actions/action';\nimport Picture from './Picture';\nlet login;\nconst LoginSchema = Yup.object().shape({\n  name: Yup.string().required('this field is requierd'),\n  password: Yup.string().required('this field is requierd')\n});\n\nfunction Login(props) {\n  _s();\n\n  const history = useHistory();\n\n  const login = async values => {\n    console.log(values);\n    getUserByNameAndPassword(values);\n\n    if (login) {\n      console.log(\"hello\");\n      props.changeNameFormLogin(values.name);\n      props.changePasswordFormLogin(values.password); // history.push(\"/login/todayPicture\");\n\n      history.push(\"/navbar\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        opacity: 0.5,\n        width: '100%',\n        position: 'fixed',\n        marginLeft: \"-9.35%\",\n        marginTop: \"-2%\"\n      },\n      className: \"d-block w-100\",\n      src: \"1.jpg\",\n      alt: \"First slide\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6  mr-7 \",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"nasa project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              name: props.name,\n              password: props.password\n            },\n            onSubmit: login,\n            validationSchema: LoginSchema,\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Login form\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(Field, {\n                  className: \"form-control\",\n                  type: \"name\",\n                  name: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  className: \"alert alert-danger\",\n                  component: \"div\",\n                  name: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(Field, {\n                  className: \"form-control\",\n                  type: \"password\",\n                  name: \"password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  className: \"alert alert-danger\",\n                  component: \"div\",\n                  name: \"password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-dark\",\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: props.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: props.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: props.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"new User?  \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/register\",\n                  children: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 48\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default connect(state => {\n  return {\n    name: state.name,\n    password: state.password,\n    email: state.email\n  };\n}, dispatch => {\n  return {\n    changeNameFormLogin: function (newName) {\n      dispatch(setName(newName));\n    },\n    changePasswordFormLogin: function (newPassword) {\n      dispatch(setPassword(newPassword));\n    }\n  };\n})(Login);\n\nfunction getUserByNameAndPassword(values) {\n  var requestOptions = {\n    method: 'GET',\n    redirect: 'follow'\n  };\n  console.log(`values ${values.name}/${values.password}`);\n  fetch(`http://localhost:4200/login/${values.name}/${values.password}`, requestOptions).then(response => response.text()).then(result => {\n    if (result === \"The user is not defined, Please register\") {\n      alert('The user is not defined, Please register');\n    } else {\n      alert('The user is login');\n      console.log(`result ${result}`);\n      login = true;\n      let result2 = JSON.parse(result);\n      localStorage.setItem('token', result2.token);\n      alert(`Hii hello ${result2.user.name}`); // history.push('/todayImage')\n    }\n  }).catch(error => console.log('error', error));\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/אתרא/פרויקט ענק/client/try-app/src/components/Login.js"],"names":["React","useState","Formik","Form","Field","ErrorMessage","Yup","connect","Link","useHistory","setName","setPassword","setEmail","Picture","login","LoginSchema","object","shape","name","string","required","password","Login","props","history","values","console","log","getUserByNameAndPassword","changeNameFormLogin","changePasswordFormLogin","push","opacity","width","position","marginLeft","marginTop","email","state","dispatch","newName","newPassword","requestOptions","method","redirect","fetch","then","response","text","result","alert","result2","JSON","parse","localStorage","setItem","token","user","catch","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport *as Yup from 'yup'\r\nimport { connect } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { setName, setPassword, setEmail } from '../redux/actions/action'\r\n\r\nimport Picture from './Picture';\r\n\r\nlet login;\r\n\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n    name: Yup.string().required('this field is requierd'),\r\n    password: Yup.string().required('this field is requierd')\r\n})\r\n\r\nfunction Login(props) {\r\n\r\n    const history = useHistory();\r\n\r\n    const login = async (values) => {\r\n        console.log(values);\r\n        getUserByNameAndPassword(values);\r\n        if (login) {\r\n            console.log(\"hello\");\r\n            props.changeNameFormLogin(values.name);\r\n            props.changePasswordFormLogin(values.password);\r\n            // history.push(\"/login/todayPicture\");\r\n            history.push(\"/navbar\");\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <img style={{ opacity: 0.5, width: '100%', position: 'fixed',marginLeft: \"-9.35%\" ,marginTop:\"-2%\"}} className=\"d-block w-100\" src=\"1.jpg\" alt=\"First slide\" />\r\n            <div className=\"container \">\r\n                <div className=\"row\" >\r\n                    <div className=\"col-6  mr-7 \">\r\n                    <h1 >nasa project</h1>\r\n\r\n                        <Formik\r\n                            initialValues={{ name: props.name, password: props.password }}\r\n                            onSubmit={login}\r\n                            validationSchema={LoginSchema}>\r\n                            <Form>\r\n\r\n                                <h2>Login form</h2>\r\n                                <div className=\"form-group\">\r\n                                    <Field className=\"form-control\" type=\"name\" name=\"name\" />\r\n                                    <ErrorMessage className=\"alert alert-danger\" component=\"div\" name=\"name\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <Field className=\"form-control\" type=\"password\" name=\"password\" />\r\n                                    <ErrorMessage className=\"alert alert-danger\" component=\"div\" name=\"password\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <button type='submit' className=\"btn btn-dark\">Login</button>\r\n                                </div>\r\n                                <h3>{props.name}</h3>\r\n                                <h3>{props.password}</h3>\r\n                                <h3>{props.email}</h3>\r\n                                <p>\r\n                                    new User?  <Link to=\"/register\">Register</Link>\r\n                                </p>\r\n                            </Form>\r\n                        </Formik>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(\r\n    (state) => {\r\n        return {\r\n            name: state.name,\r\n            password: state.password,\r\n            email: state.email\r\n        }\r\n    },\r\n    (dispatch) => {\r\n        return {\r\n            changeNameFormLogin: function (newName) {\r\n                dispatch(setName(newName))\r\n            },\r\n            changePasswordFormLogin: function (newPassword) {\r\n                dispatch(setPassword(newPassword))\r\n            }\r\n\r\n        }\r\n    }\r\n)(Login);\r\n\r\nfunction getUserByNameAndPassword(values) {\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        redirect: 'follow'\r\n    };\r\n\r\n    console.log(`values ${values.name}/${values.password}`);\r\n    fetch(`http://localhost:4200/login/${values.name}/${values.password}`, requestOptions)\r\n        .then(response => response.text())\r\n        .then(result => {\r\n            if (result === \"The user is not defined, Please register\") {\r\n                alert('The user is not defined, Please register')\r\n            }\r\n            else {\r\n                alert('The user is login')\r\n\r\n\r\n                console.log(`result ${result}`);\r\n\r\n                login = true;\r\n                let result2 = JSON.parse(result)\r\n\r\n                localStorage.setItem('token', result2.token)\r\n                alert(`Hii hello ${result2.user.name}`)\r\n\r\n\r\n                // history.push('/todayImage')\r\n\r\n            }\r\n        }\r\n\r\n        )\r\n        .catch(error => console.log('error', error));\r\n}"]},"metadata":{},"sourceType":"module"}