{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\\\u05D0\\u05EA\\u05E8\\u05D0\\\\react1\\\\project\\\\try-app\\\\src\\\\components\\\\Login.js\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport userService from '../services/user.service';\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string().required('this field is requierd').email('invalid mail'),\n  password: Yup.string().required('this field is requierd')\n});\nexport default (({\n  tokenCb\n}) => {\n  const login = async values => {\n    console.log(values);\n    const token = await userService.login(values);\n    tokenCb(token);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: login,\n    validationSchema: LoginSchema,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          className: \"form-control\",\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          className: \"alert alert-danger\",\n          component: \"div\",\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          className: \"form-control\",\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          className: \"alert alert-danger\",\n          component: \"div\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n});","map":{"version":3,"sources":["D:/אתרא/react1/project/try-app/src/components/Login.js"],"names":["React","Formik","Form","Field","ErrorMessage","Yup","userService","LoginSchema","object","shape","email","string","required","password","tokenCb","login","values","console","log","token"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAeC,IAAf,EAAoBC,KAApB,EAA0BC,YAA1B,QAA6C,QAA7C;AACA,OAAO,KAAIC,GAAX,MAAoB,KAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,MAAMC,WAAW,GAACF,GAAG,CAACG,MAAJ,GAAaC,KAAb,CAAmB;AACjCC,EAAAA,KAAK,EAACL,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,EAAgDF,KAAhD,CAAsD,cAAtD,CAD2B;AAEjCG,EAAAA,QAAQ,EAACR,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB;AAFwB,CAAnB,CAAlB;AAKA,gBAAe,CAAC;AAACE,EAAAA;AAAD,CAAD,KAAa;AAExB,QAAMC,KAAK,GAAC,MAAMC,MAAN,IAAe;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,UAAMG,KAAK,GAAC,MAAMb,WAAW,CAACS,KAAZ,CAAkBC,MAAlB,CAAlB;AACAF,IAAAA,OAAO,CAACK,KAAD,CAAP;AACH,GAJD;;AAMA,sBACI,QAAC,MAAD;AACA,IAAA,aAAa,EAAE;AAACT,MAAAA,KAAK,EAAC,EAAP;AAAUG,MAAAA,QAAQ,EAAE;AAApB,KADf;AAEA,IAAA,QAAQ,EAAEE,KAFV;AAGA,IAAA,gBAAgB,EAAER,WAHlB;AAAA,2BAKI,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,cAAjB;AAAgC,UAAA,IAAI,EAAC,OAArC;AAA6C,UAAA,IAAI,EAAC,OAAlD;AAA2D,UAAA,WAAW,EAAC;AAAvE;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,YAAD;AAAc,UAAA,SAAS,EAAC,oBAAxB;AAA6C,UAAA,SAAS,EAAC,KAAvD;AAA6D,UAAA,IAAI,EAAC;AAAlE;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCAEI,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,cAAjB;AAAgC,UAAA,IAAI,EAAC,UAArC;AAAgD,UAAA,IAAI,EAAC,UAArD;AAAiE,UAAA,WAAW,EAAC;AAA7E;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,YAAD;AAAc,UAAA,SAAS,EAAC,oBAAxB;AAA6C,UAAA,SAAS,EAAC,KAAvD;AAA6D,UAAA,IAAI,EAAC;AAAlE;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAWI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CA/BD","sourcesContent":["import React from 'react'\r\nimport {Formik,Form,Field,ErrorMessage} from 'formik'\r\nimport *as Yup from 'yup'\r\nimport userService from '../services/user.service'\r\n\r\nconst LoginSchema=Yup.object().shape({\r\n    email:Yup.string().required('this field is requierd').email('invalid mail'),\r\n    password:Yup.string().required('this field is requierd')\r\n})\r\n\r\nexport default ({tokenCb})=>{\r\n\r\n    const login=async(values)=>{\r\n        console.log(values);\r\n        const token=await userService.login(values);\r\n        tokenCb(token);\r\n    }\r\n\r\n    return(\r\n        <Formik\r\n        initialValues={{email:'',password: ''}}\r\n        onSubmit={login}\r\n        validationSchema={LoginSchema}\r\n        >\r\n            <Form>\r\n                <h2>Login form</h2>\r\n                <div className=\"form-group\">\r\n                    <Field className=\"form-control\" type=\"email\" name=\"email\"  placeholder='Email'/>\r\n                    <ErrorMessage className=\"alert alert-danger\" component=\"div\" name=\"email\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n\r\n                    <Field className=\"form-control\" type=\"password\" name=\"password\"  placeholder='Password'/>\r\n                    <ErrorMessage className=\"alert alert-danger\" component=\"div\" name=\"password\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button type='submit' className=\"btn btn-primary\">Login</button>\r\n                </div>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}