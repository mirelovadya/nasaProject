{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\\\u05D0\\u05EA\\u05E8\\u05D0\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8 \\u05E2\\u05E0\\u05E7\\\\client\\\\try-app\\\\src\\\\components\\\\Picture.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { Component, useState } from 'react';\nimport { connect } from 'react-redux';\n\nfunction Picture(props) {\n  _s();\n\n  const [selectedFile, setSelectedFile] = useState(null); // state = {\n  //     selectedFile: null\n  // };\n\n  const onFileChange = event => {\n    setSelectedFile({\n      selectedFile: event.target.files[0]\n    });\n  };\n\n  const onFileUpload = () => {\n    // Create an object of formData\n    const formData = new FormData(); // Update the formData object\n\n    formData.append(\"myFile\", selectedFile.tos, selectedFile.name);\n    console.log(selectedFile); // Request made to the backend api\n    // Send formData object\n\n    uploadPicture(props, selectedFile); // axios.post(\"\");\n  }; // File content to be displayed after\n  // file upload is complete\n\n\n  const fileData = () => {\n    if (selectedFile) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"File Details:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"File Name: \", selectedFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"File Type: \", selectedFile.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Last Modified:\", selectedFile.lastModifiedDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Choose before Pressing the Upload button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"choose picture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: onFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onFileUpload,\n        children: \"Upload!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), fileData()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Picture, \"EyevHrYsewnagOxcWqRVJAQqt/I=\");\n\n_c = Picture;\nexport default connect(state => {\n  return {\n    name: state.name,\n    password: state.password,\n    email: state.email,\n    picture: state.picture\n  };\n}, null)(Picture);\n\nconst uploadPicture = (values, file) => {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Authorization\", `${localStorage.getItem(\"token\")}`);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var raw = JSON.stringify({\n    \"name\": file.name,\n    \"type\": file.type,\n    \"webkitRelativePath\": file.webkitRelativePath,\n    \"lastModifiedDate\": file.lastModifiedDate\n  });\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  console.log({\n    \"name\": file.name,\n    \"type\": file.type,\n    \"webkitRelativePath\": file.webkitRelativePath,\n    \"lastModifiedDate\": file.lastModifiedDate\n  });\n  fetch(`http://localhost:4200/uploadPicture/${values.name}/${values.password}`, requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Picture\");","map":{"version":3,"sources":["D:/אתרא/פרויקט ענק/client/try-app/src/components/Picture.js"],"names":["axios","React","Component","useState","connect","Picture","props","selectedFile","setSelectedFile","onFileChange","event","target","files","onFileUpload","formData","FormData","append","tos","name","console","log","uploadPicture","fileData","type","lastModifiedDate","state","password","email","picture","values","file","myHeaders","Headers","localStorage","getItem","raw","JSON","stringify","webkitRelativePath","requestOptions","method","headers","body","redirect","fetch","then","response","text","result","catch","error"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nimport React, { Component, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction Picture(props) {\r\n    const [selectedFile,setSelectedFile]=useState(null);\r\n    \r\n    // state = {\r\n    //     selectedFile: null\r\n    // };\r\n\r\n    const onFileChange = event => {\r\n        setSelectedFile({ selectedFile: event.target.files[0] });\r\n    };\r\n\r\n    const onFileUpload = () => {\r\n\r\n        // Create an object of formData\r\n        const formData = new FormData();\r\n\r\n        // Update the formData object\r\n        formData.append(\r\n            \"myFile\",\r\n            selectedFile.tos,\r\n            selectedFile.name\r\n        );\r\n        console.log(selectedFile);\r\n\r\n        // Request made to the backend api\r\n        // Send formData object\r\n        uploadPicture(props,selectedFile);\r\n        // axios.post(\"\");\r\n    };\r\n\r\n    // File content to be displayed after\r\n    // file upload is complete\r\n    const fileData = () => {\r\n\r\n        if (selectedFile) {\r\n\r\n            return (\r\n                <div>\r\n                    <h2>File Details:</h2>\r\n\r\n                    <p>File Name: {selectedFile.name}</p>\r\n\r\n\r\n                    <p>File Type: {selectedFile.type}</p>\r\n\r\n\r\n                    <p>\r\n                        Last Modified:\r\n                        {selectedFile.lastModifiedDate}\r\n                    </p>\r\n\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <br />\r\n                    <h4>Choose before Pressing the Upload button</h4>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n        return (\r\n            <div>\r\n                <h1>\r\n                    choose picture\r\n\t\t\t</h1>\r\n\r\n                <div>\r\n                    <input type=\"file\" onChange={onFileChange} />\r\n                    <button onClick={onFileUpload}>\r\n                        Upload!\r\n\t\t\t\t</button>\r\n                </div>\r\n                {fileData()}\r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n    (state) => {\r\n        return {\r\n            name: state.name,\r\n            password: state.password,\r\n            email: state.email,\r\n            picture: state.picture\r\n        }\r\n    },\r\n    null\r\n)(Picture);\r\n\r\n\r\nconst uploadPicture = (values,file) => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", `${localStorage.getItem(\"token\")}`);\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var raw = JSON.stringify({ \"name\": file.name, \"type\": file.type, \"webkitRelativePath\": file.webkitRelativePath, \"lastModifiedDate\": file.lastModifiedDate });\r\n\r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n    };\r\n    console.log({ \"name\": file.name, \"type\": file.type, \"webkitRelativePath\": file.webkitRelativePath, \"lastModifiedDate\": file.lastModifiedDate });\r\n\r\n    fetch(`http://localhost:4200/uploadPicture/${values.name}/${values.password}`, requestOptions)\r\n        .then(response => response.text())\r\n        .then(result => console.log(result))\r\n        .catch(error => console.log('error', error));\r\n}"]},"metadata":{},"sourceType":"module"}