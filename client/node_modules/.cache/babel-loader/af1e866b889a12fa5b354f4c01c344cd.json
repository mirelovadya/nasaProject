{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\\\u05D0\\u05EA\\u05E8\\u05D0\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8 \\u05E2\\u05E0\\u05E7\\\\client\\\\try-app\\\\src\\\\components\\\\Picture.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport NavBar from './NavBar';\nlet url;\n\nclass Picture extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedFile: null\n    };\n\n    this.onFileChange = event => {\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onFileUpload = () => {\n      const formData = new FormData();\n      formData.append(\"myFile\", this.state.selectedFile, this.state.selectedFile.name);\n      console.log(this.state.selectedFile);\n      uploadPicture(this.props.name, this.props.password, this.state.selectedFile);\n    };\n\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"File Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Type: \", this.state.selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Modified:\", this.state.selectedFile.lastModifiedDate.toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"picture of the day\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 33\n                }, this), this.state.selectedFile.type === \"video\" ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n                  src: `${url}`,\n                  alt: \"vidio\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `${url}`,\n                  alt: \"image today\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Choose before Pressing the Upload button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"choose picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onFileUpload,\n          children: \"Upload!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), this.fileData()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(state => {\n  return {\n    name: state.name,\n    password: state.password,\n    email: state.email,\n    picture: state.picture\n  };\n}, null)(Picture);\n\nconst uploadPicture = (name, password, file) => {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Authorization\", `${localStorage.getItem(\"token\")}`);\n  console.log(`token ${localStorage.getItem(\"token\")}`);\n  var raw = \"\";\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  console.log(`detailes ${name}/${password}/${file.name}/jpg/${file.webkitRelativePath}/${file.lastModifiedDate}`);\n  url = \"‏‏תמונות\";\n  fetch(`http://localhost:4200/uploadPicture/${name}/${password}/${file.name}/jpg/${url}/${file.lastModifiedDate}`, requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error)); // var myHeaders = new Headers();\n  // myHeaders.append(\"Authorization\", `${localStorage.getItem(\"token\")}`);\n  // myHeaders.append(\"Content-Type\", \"application/json\");\n  // var raw = \"\";\n  // var requestOptions = {\n  //     method: 'POST',\n  //     headers: myHeaders,\n  //     body: raw,\n  //     redirect: 'follow'\n  // };\n  // // console.log({ \"name\": file.name, \"type\": file.type, \"webkitRelativePath\": file.webkitRelativePath, \"lastModifiedDate\": file.lastModifiedDate });\n  // fetch(`http://localhost:4200/uploadPicture/${name}/${password}/${file.name}/${file.type}/${file.webkitRelativePath}/${file.lastModifiedDate}`, requestOptions)\n  //     .then(response => response.text())\n  //     .then(result => console.log(result))\n  //     .catch(error => console.log('error', error));\n};","map":{"version":3,"sources":["D:/אתרא/פרויקט ענק/client/try-app/src/components/Picture.js"],"names":["axios","React","Component","connect","NavBar","url","Picture","state","selectedFile","onFileChange","event","setState","target","files","onFileUpload","formData","FormData","append","name","console","log","uploadPicture","props","password","fileData","type","lastModifiedDate","toDateString","render","email","picture","file","myHeaders","Headers","localStorage","getItem","raw","requestOptions","method","headers","body","redirect","webkitRelativePath","fetch","then","response","text","result","catch","error"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport NavBar from './NavBar';\r\nlet url;\r\n\r\nclass Picture extends React.Component {\r\n    state = {\r\n        selectedFile: null\r\n    };\r\n    onFileChange = event => {\r\n        this.setState({ selectedFile: event.target.files[0] });\r\n    };\r\n    onFileUpload = () => {\r\n        const formData = new FormData();\r\n        formData.append(\r\n            \"myFile\",\r\n            this.state.selectedFile,\r\n            this.state.selectedFile.name\r\n        );\r\n        console.log(this.state.selectedFile);\r\n        uploadPicture(this.props.name, this.props.password, this.state.selectedFile)\r\n    };\r\n    fileData = () => {\r\n        if (this.state.selectedFile) {\r\n\r\n            return (\r\n\r\n                <div>\r\n                    <NavBar />\r\n\r\n                    <h2>File Details:</h2>\r\n\r\n                    <p>File Name: {this.state.selectedFile.name}</p>\r\n\r\n\r\n                    <p>File Type: {this.state.selectedFile.type}</p>\r\n\r\n\r\n                    <p>\r\n                        Last Modified:\r\n                        {this.state.selectedFile.lastModifiedDate.toDateString()}\r\n                    </p>\r\n\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <h2>picture of the day</h2>\r\n                                {\r\n                                    this.state.selectedFile.type === \"video\" ?\r\n                                        <iframe src={`${url}`} alt=\"vidio\" />\r\n                                        :\r\n                                        <img src={`${url}`} alt=\"image today\" />\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <br />\r\n                    <h4>Choose before Pressing the Upload button</h4>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.props.name}</h1>\r\n                <h1>\r\n                    choose picture\r\n\t\t\t</h1>\r\n                <div>\r\n                    <input type=\"file\" onChange={this.onFileChange} />\r\n                    <button onClick={this.onFileUpload}>\r\n                        Upload!\r\n\t\t\t\t</button>\r\n                </div>\r\n                { this.fileData()}\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n    (state) => {\r\n        return {\r\n            name: state.name,\r\n            password: state.password,\r\n            email: state.email,\r\n            picture: state.picture\r\n        }\r\n    },\r\n    null\r\n)(Picture);\r\n\r\n\r\nconst uploadPicture = (name, password, file) => {\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", `${localStorage.getItem(\"token\")}`);\r\n    console.log(`token ${localStorage.getItem(\"token\")}`);\r\n\r\n    var raw = \"\";\r\n\r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n    };\r\n\r\n\r\n    console.log(`detailes ${name}/${password}/${file.name}/jpg/${file.webkitRelativePath}/${file.lastModifiedDate}`);\r\n\r\n    url = \"‏‏תמונות\";\r\n    fetch(`http://localhost:4200/uploadPicture/${name}/${password}/${file.name}/jpg/${url}/${file.lastModifiedDate}`, requestOptions)\r\n        .then(response => response.text())\r\n        .then(result => console.log(result))\r\n        .catch(error => console.log('error', error));\r\n    // var myHeaders = new Headers();\r\n    // myHeaders.append(\"Authorization\", `${localStorage.getItem(\"token\")}`);\r\n    // myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    // var raw = \"\";\r\n\r\n    // var requestOptions = {\r\n    //     method: 'POST',\r\n    //     headers: myHeaders,\r\n    //     body: raw,\r\n    //     redirect: 'follow'\r\n    // };\r\n    // // console.log({ \"name\": file.name, \"type\": file.type, \"webkitRelativePath\": file.webkitRelativePath, \"lastModifiedDate\": file.lastModifiedDate });\r\n\r\n    // fetch(`http://localhost:4200/uploadPicture/${name}/${password}/${file.name}/${file.type}/${file.webkitRelativePath}/${file.lastModifiedDate}`, requestOptions)\r\n    //     .then(response => response.text())\r\n    //     .then(result => console.log(result))\r\n    //     .catch(error => console.log('error', error));\r\n}"]},"metadata":{},"sourceType":"module"}